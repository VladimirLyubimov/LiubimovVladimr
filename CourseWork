#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
#include <locale.h>

struct MyWord{
    wchar_t* buf;
    int num;
    int len;
};

typedef struct MyWord word;
    
struct MySentence{
    word* buf;
    int len;
    //int num;
};

typedef struct MySentence sentence;

struct MyText{
    sentence* buf;
    int len;
};

typedef struct MyText text;

word ReadWord(){
	word inword;
	int size = 10;
	int n = 0;
	inword.buf = malloc(size * sizeof(wchar_t));
	wchar_t wc;
	while(1){
		wc = fgetwc(stdin);
		if (wcschr(L" ,!?.", wc)){
			inword.buf[n] = wc;
			n++;
			inword.len = n - 1;
			if (wcschr(L",!?.", wc)){
				wc = fgetwc(stdin);
				if (wcschr(L" ", wc)){
					inword.buf[n] = wc;
					n++;
					inword.len = n - 2;
				}
				else
					break;
			}
			break;
		}
		inword.buf[n] = wc;
		n++;
		if(n == size - 4){
			size+=10;
			inword.buf = realloc(inword.buf, size * sizeof(wchar_t));
		}
	};
	inword.buf[n] = L'\0';
	return inword;
};

sentence ReadSentence(){
	sentence insent;
	int size = 10;
	int n = 0;
	insent.buf = malloc(size * sizeof(word*));
	word wd;
	while(1){
		wd = ReadWord();
		if (wcschr(L"!?.", wd.buf[wd.len])){
			insent.buf[n] = wd;
			insent.buf[n].num = n + 1;
			break;
		}
		insent.buf[n] = wd;
		insent.buf[n].num = n + 1;
		n++;
		if(n == size - 1){
			size+=10;
			insent.buf = realloc(insent.buf, size * sizeof(word*));
		}		
	};
	insent.len = n + 1;
	return insent;
};

text ReadText(){
	text intext;
	int size = 10;
	int n = 0;
	intext.buf = malloc(size * sizeof(sentence*));
	sentence sent;
	while(1){
		sent = ReadSentence();
		if (wcschr(L"!?.", wd.buf[wd.len])){
			insent.buf[n] = wd;
			insent.buf[n].num = n + 1;
			break;
		}
		insent.buf[n] = wd;
		insent.buf[n].num = n + 1;
		n++;
		if(n == size - 1){
			size+=10;
			insent.buf = realloc(insent.buf, size * sizeof(word*));
		}			
	}
};

void PrintSentence(sentence outsent){
	int i = 0;
	while(i < outsent.len){
		wprintf (L"%ls",outsent.buf[i]);
		i++;
	} 
};

int main(){
	word tword;
	sentence tsent;
	//tword = ReadWord();
	tsent = ReadSentence();
    //wprintf (L"%ls\n",tsent.buf[0]);
    PrintSentence(tsent);
	wprintf(L"\n%d", tsent.len);
	return 0;	
}
